Object类：
 1）什么是Object类
 	是java语言中，所有类的父类
 2）自造类和Object类
 	如果自造类不继承任何类，默认继承Object类
 	
 	
继承下构造方法的执行顺序：
 1）实例化子类对象时也会实例化父类对象
	子类对象中包含一个对父类对象的引用
 2）执行顺序
 	先运行父类构造，再运行子类构造
 3）默认运行
 	子类构造中，没有指定调用父类的那一个构造，默认调用父类的无参构造	
 	需要使用super关键字来调用父类的构造方法
 	
 	
super关键字
 1)含义：super是当前对象对父类的引用
 2)使用：
 	2.1）super.属性;		调用当前类父类对象的属性
 						区分子类和父类的同名属性
 	2.2）super.方法(); 	调用当前类父类对象的方法
 						区分子类和父类的同名方法
 	2.3）super();
 		调用当前类父类的无参构造方法
 		super()必须编写在当前类构造方法的第一行
 		
 		构造方法中的第一行不写this()或super()，默认是super()
 		
 无参构造方法生成快捷键：在类中直接按  Alt+/  选择与类名相同的方法
 有参构造方法生成快捷键：	Alt+Shift+S~O(子母键)  
		
 4)向上造型(向上转型)	
	4.1)描述:一个子类对象,当做父类类型使用 			Person person=new Student();
		 										  |					|
		 										  父类			     子类
 	4.2)使用向上造型的原因
 		多个不同类型的子类对象,可以使用它们的父类类型的数组来保存多个不同类型的子类对象
 	4.3)使用方法:
 		格式:	<父类类型> <引用>=<子类对象>;
 		
 		子类对象赋值给父类引用 / 父类引用指向子类对象
 		例如:(Person是父类,Teacher是子类)		
 			 Person person=new Teacher("王老师",34,"男","数学");
 		
 	4.4)向上造型后的问题:
 		父类引用只能调用到父类中定义的属性和方法,不能调用到子类的特有属性和方法
 		
 		
 5)向下造型(先向上造型,后强转    官方:强制类型转换   没有向下造型一说)
 	转成父类型的子类实例,再转回成子类型
 	 Person person = new Superman();	//Person是父类   Superman是子类
     Superman s = (Superman)person;   //向下转型
 		s.sleep();			//调用方法
        s.fly();
 		...
 	
 	
方法重写:(方法覆盖/override) 	  重写前提有继承(extends)
	 1)定义:子类中重新编写父类中的方法
	 
	 2)重写原因:向上造型后,父类引用不能调用到子类的成员,使用override改善此问题
	 		      当子类中对父类的某个方法的编写不满意时可以重写父类中的方法
	 		      
	 3)方法重写的使用:
	 	简单的方法重写
	 	3.1)在子类中
	 	3.2)编写一个和父类方法名相同
	 	3.3)参数列表相同
	 	
	 4)方法重写后的作用:
	 	向上造型后的父类引用调用子类重写后的方法时,实际上运行的是子类重写后的方法,
	 	编译时认为是父类的方法,编译通过
	 	
	 5)方法重写的注意事项:
	 	5.1)构造方法不能被重写和继承。
	 	5.2)声明为final的方法不能被重写,声明为final的类不能被继承。
		5.3)声明为static的方法不能被重写，但是能够被再次声明。
	 	5.4)子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为private和final的方法。
		5.5)子类和父类不在同一个包中，那么子类只能够重写父类的声明为public和protected的非final方法。
	 	
	 6)重写必须遵循"两同两小一大"原则:
		两同(即,方法签名相同):	方法名称相同
								参数列表相同
		两小:
			    1.派生类(子类)方法的   返回值类型   小于或等于超类方法的
					  1)void时，必须相等
					  2)基本数据类型时，必须相等
					  3)引用数据类型时，小于或等于(即,子类的返回值类型是父类返回值类型的子类)
					  	例如:父类抛出异常:IOException,子类只能抛出IOException
					  		父类:Excption	子类:Excption或者IOException(是Excption或的子类)	
				2.派生类方法抛出的异常小于或等于超类方法的
		一大:
			        派生类方法的访问权限	大于或等于	超类方法的
			        大==================>小
			     public  protected	dafault  private
 
 
方法重写与重载的区别:
				位置			方法名			参数			返回值			修饰符
		重载		同类中		相同				不同			无关				无关
		重写		子类中		相同				相同			相同*			相同*
 
注意:* :是指有个别情况也可以不同

 	