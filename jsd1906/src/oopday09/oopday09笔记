多态:
 1)含义:一个父类的不同子类对象对父类中声明的方法的不同调用
 2)使用原因:父类引用调用方法,能够运行子类重写后的方法
 3)实现多态的步骤
 	3.1)编写父类(也可能是个接口),定义要重写的方法
 	3.2)子类继承父类重写父类中的方法
 	3.3)子类对象赋给父类引用,父类引用调用重写后的方法(向上造型)
 	PS:描述中的父类可能是接口,子类可能是接口的实现类
 	
父类类型强制类型转换为子类类型:
  1)强转原因:父类类型无法调用子类独有的成员			
  2)转换格式:(子类类型)父类引用  
  	例如:Pet p=new Dog();
  		 Dog d=(Dog)p;		 <====	
  3)如何使用:					||
  	3.1)转换后赋给子类引用=========
  	3.2)就地调用子类成员	((Dog)p).catchFly();  
    3.3)强制类型转换只能发生在继承关系的类之间.
  
    
instanceOf关键字:
  1)含义:专门用于判断一个对象是否属于一个类型的关键字
  2)使用原因:在引用类型强制类型转换之前进行判断,防止发生ClassCastException (类型转换异常)
  3)使用方法:	<引用> instanceOf <类型>  运行结果是true或false,一般配合if使用
		if (p instanceof Dog) {
								Dog dd = (Dog) p;
								dd.catchFly();
							}
  	
 