数组:							
1)什么是数组
		数组就是一组相同数据类型的集合
		一个变量保存多个数据
		
2)为什么需要数组
		程序中操作多个变量不方便,使用数组能简化冗余操作
		
3)数组的构成
		3.1)一个数组要有一个名称:数组名
		3.2)数组中的数据称为:数据元素
		3.3)一个数组的数据的容量称为:数组长度
		3.4)数组中每个元素都有编号称为:数组下标
		
4)数组的特征
	4.1)数组的长度是固定的,不能随意更改
	4.2)数组中只能保存相同数据类型的数据
	4.3)数组元素是有默认值的
			整数默认值:0
			小数:0.0
			引用:null
			boolean:false
			
5)数组的声明:
		int[] array;(官方推荐)  	或 int array[];
		
6)数组的初始化
		array=new int[5];  		动态初始化
		array={1,2,3,4,5};//会报错 					注意！！！！！！！
		或array=new int[]{1,2,3,4,5};	//不会报错			静态初始化
	注意: 声明初始化可以合二为一
			声明的类型与初始化的类型要一致
	
7)数组元素的赋值
	<数组名>[<下标>]
	array[0]=100;

8)初始化同时赋值	
	
9)数组的输出使用
	9.1)数组名不能直接输出，输出显示的是该数组的地址
	9.2)可以使用数组名.length获取数组长度
	9.3)数组元素下标范围是0~(数组长度-1)		
	9.4)防止数组下标越界 		最后一个元素是array[array.length-1];
	9.5)访问数组需要用循环遍历数组
	
数组是引用数据类型
	1)认识引用
		当两个数组名引用同一个数组时,数组A对元素的修改会影响数组B的内容,原因是AB的引用相同
		要想修改A不影响B就需要使得他们的引用不同,使用数组复制完成
		
数组复制:
	1)什么是数组复制
			就是在目标数组中复制源数组的数据内容的操作,而且两个数组引用不同
	2)数组复制的实现
			2.1)编写代码复制
			2.2)System.arraycopy(1,2,3,4,5);			可以复制部分数据
								1:源数组名
								2:源数组起始位置
								3:目标数组
								4:目标数组起始位置
								5:复制的元素个数
			2.3)Arrays.copyOf(1,2);		1:源数组名		2:长度	此方法适合现有数组的扩容和缩容
							int[] arr=new int[9];
							int[] a=Arrays.copyOf(arr, arr.length);//a与arr内容一样
							int[] a=Arrays.copyOf(arr, 5);//数组缩容  arr为源数组  a为缩容的数组

数组排序
	1)什么是排序
			将数组中的数据按照从大到小或从小到大方式进行排序		
					Arrays.sort(数组名);//数组元素升序排序方法
	2)排序的好处
			方便使用数据
	3)如何对数组进行排序
		3.1)使用系统提供的Arrays.sort()方法  只有升序  
				降序输出:
					int[] arr= {7,3,9,6,2,1};
					Arrays.sort(arr);//升序
					for (int i = arr.length-1; i >=0; i--) {
						System.out.print(arr[i]);
					}
		
		
	
CGB自学:
	1)Arrays.sort(数组名);//数组元素升序排序方法
	2)把数组里的数据，用逗号连接成一个字符串。
				int[] arr= {1,2,3,4,5};
				System.out.println(Arrays.toString(arr));
				输出结果就是:		[1,2,3,4,5]
	3)冒泡排序
		//控制执行论次,n个元素要执行n-1次
			for (int i = 0; i <array.length-1; i++) {
		//比较大小 	交换位置
				for (int j = 0; j < array.length-1-i; j++) {
						if (array[j]>array[j+1]) {
							int y=array[j];
							array[j]=array[j+1];
							array[j+1]=y;
							}
				}
			}