内部类:
 1)含义:类中又编写了一个类
 	外部类称为Outer,内部类称为Inner
 2)常用内部类
 	2.1)成员内部类:在类的成员位置编写内部类
 		2.1.1)成员内部类可以使用全部的四种访问修饰符
 		2.1.2)内部类中的方法可以访问外部类中的私有成员                                                    
 		2.1.3)外部类可以在方法中实例化内部类对象并访问内部类成员
 		2.1.4)当外部类和内部类有重名成员时,内部类中调用外部类重名成员时
 			  使用格式:	外部类名.this.外部类的属性/方法;
 		2.1.5)内部类想在其他类中实例化,需要先将内部类导入,然后实例化
		 		import oopday07.Outer.Inner;//导入内部类
		 		Inner i=new Outer().new Inner();//实例化内部类,记得导入内部类
		2.1.6)所有内部类在编译后都会产生自己独立的class文件
	2.2)匿名内部类
		就是在类中通过"就地"实现接口(父类),而编写的一个没有名字的内部类
		2.2.1)匿名内部类必须通过 继承  一个父类或实现一个  接口  才能编写
		2.2.2)匿名内部类通常编写在方法中
		2.2.3)匿名内部类可以使用外部内中的私有成员,并且成员重名时处理方式同成员内部类
	    ※2.2.4)特别注意:匿名内部类的对象是向上造型后的,所以只能调用到继承父类的可以访问的成员
		2.2.5)匿名内部类的方法中,不能修改该内部类所在方法中局部变量的值
		2.2.6)匿名内部类的方法中,要获取该内部类所在方法中的局部变量,需要保证局部变量只能被赋值一次 
		2.2.7)JDK1.6之前所有匿名内部类使用的局部变量都必须使用final修饰
		
 3)计时器:	
	3.1)含义:一般用于设定每隔一段时间调用一次某个方法的功能
	3.2)使用计时器步骤:
		3.2.1)实例化一个计时器对象  Timer timer=new Timer();
		3.2.2)使用匿名内部类继承TimerTask类,重写方法编写每隔一段时间要做的事情
		3.2.3)使用计时器设置并周期性运行TimerTask   timer.schedule(task, 3000,500);3秒后开始运行,间隔0.5秒
		
			