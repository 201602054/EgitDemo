注释：指定java文件中某些内容不编译
	1 单行注释  //注释内容     
	2 多行注释  /* 注释内容 */   多行注释范围内所有行都不编译和运行
	3 文档注释/**    */
		 	
	
	 格式化代码到正确缩进：ctrl+A  		ctrl+I
	 导包快捷键    			ctrl+shift+o
	 
	 
变量：
什么是变量？
	就是变化的值，java中变量就是变化数值的载体
1）变量的声明
	要想使用变量，必须先声明变量
	声明变量有两个要素：类型和名称
	声明一个整数类型x    	int x;
2）变量的初始化
	声明变量要使用前，要先初始化变量 		x=35;
	合二为一  ：  int x=35;	声明并初始化
3)变量的使用
	就是将变量中保存的值“取”出来用
	3.1输出
		System.out.print(x);
	3.2在计算中出现
		int x=35; 
		int y=28;
		int s=x+y;
		System.out.print(s);
4)变量使用注意事项
	4.1已经声明的变量不能再次声明  否则编译错误
	4.2为变量赋值必须与其类型匹配	否则编译错误
	4.3变量先声明再初始化后使用
			int x；
			System.out.println(x);//编译错误
			int y=x+10；//编译错误
			
变量的命名：
1）命名规则
	1.1）变量的组成
			字母、数字、下划线_、$
			多个字符组成变量数量不限
			数字不允许开头
	1.2)变量名中不能包含空格
	1.3）变量名区分大小写		
	1.4）关键字不允许作变量名
	
2）命名规范
	2.1)变量名使用英文单词命名
	2.2)变量名应该见名知意
	2.3)如果变量名有多个单词组成，第一个单词首字母小写，之后每个单词首字母大写 ===驼峰命名法
	
	
	
	






java中的数据类型：
（一）基本数据类型(8个)
		四个整数：byte(1byte)		short(2byte)		int(4byte)		long(8byte)
		两个小数：float(4byte)		double(8byte)
		两个非数：boolean(1byte)		char(2byte)
		
	注意:BigDecimal	精确地浮点数运算
		BigInteger	超大整数运算
		
		4个整数：
			byte		1字节	-128～127				1024GB=1TB	1024TB=1PB  	
				一个非常小的整数类型，不经常使用，通常在IO中才用到
			short（短整型）	2字节	-32768～32767	
				一个较小的整数类型，不常使用
			int（整型）		4字节	-21亿～21亿
				x的值超出其范围，出现溢出现象
			long（长整型）	8字节	九百多亿亿（-9223372036854775808～9223372036854775807）		
				int类型无法保存较大数据时使用
				
				long l=System.currentTimeMillis();
				使用long类型接收时间偏移量
				1970-1-1 00：00：00 到现在经过的毫秒数   1s=1000ms
				
		2个小数：
			float（浮点型或单精度）		4字节	
				可以接收小数类型的数据   
				但是直接给float类型赋值时需要在直接量后面加上f或F(有.时必须加) 
				不经常使用
			double（双浮点或双精度）	8字节
				经常使用的小数类型			float型数值可以直接赋值给double型的
				所有浮点类型计算过程中，计算结果经常出现舍入误差
		2个非数：
			char(字符型)	2字节				0~65535
				能存储 单个 任意字符	 使用''将单个字符括起来
				计算机内部，一个字符实际上就是一个数字的转换
				a----97		A-----65		0----48      空格----32
				转义符：\
						\'---打印----'
						\"--------"
						\\--------\
			boolean（布尔类型）	1字节
				表示真假的数据类型		true或false
			
		java程序中的直接量
					直接量：直接编写在代码中的数字
					java中直接编写的整数类型是int
					java中直接编写的小数类型是double
					如果直接写的整值超过了int数值范围，在数据后面加上l或者L 例如：long y=90000000000L;
（二）引用数据类型
		类	 接口	数组		String
		
数据类型的转换：
	1)数据类型转换的原因
		java中只允许相同数据类型的数据进行计算，而计算结果还是这个数据类型	
	2)自动类型转换(隐式类型转换)
		当两个不同数据类型的数据进行计算时较小的数据类型会自动转换为较大的数据类型，结果类型为较大的类型
		小============================>大
		byte---short----int----long----float-----double
			   char
		注意：byte、short、char互相计算结果都是int型。  short和char同级
	3)强制类型转换(显式类型转换)
		当两个数据类型的数据进行计算时，如果想得到的结果是较小类型数据就可以使用强制类型转换
		例如：double d=12.5; 
				  int i=(int)d;
		
		
	4)基本类型与引用类型转换（通过桥梁[包装类]来进行转换）
		包装类：int===>Integer   char===>Character  其他六个首字母小写变大写即可：byte===>Byte	...
		
		例如：String转化为int
		String password="123";
		int value=Integer.parseInt(password);
		
		int 转化为String
		int a=5;
		String b=5+"";

		
		
		    String str = "abc";
     1)将字符串转换为字符数组:
         char[] input = str.toCharArray();
     2)将字符串转换为大写字母:
         str = str.toUpperCase();
              将字符串转换为小写字母:
         str = str.toLowerCase();
     3)判断字符串内容是否相同:
         if("EXIT".equals(str)){
	 }
	 
	 