 复习:
 	方法重载是编译期绑定,即,根据实际参数的类型来调用哪个方法
 	方法重写是运行期绑定,即,运行时才决定运行哪个方法.如果重写了就是调用重写后的方法

笔记:
static(静态)关键字:只能修饰以下三种
 	被static修饰的称之为"静态",没有被修饰的普通成员称之为"实例成员"
 1)static修饰属性(成员变量/字段)
 	<访问修饰符> static <类型> 变量名;
 	private static int age;
 	如果一个成员变量的值需要共享给该类型的所有对象,那么就需要使用静态
 	1.1)使用静态修饰的变量会保存在JVM的方法区,方法区中每个类的属性和方法都只能有一个
 	1.2)静态属性,也叫类属性 官方建议使用	类名调用
 	1.3)静态属性的好处就是不会随实例化对象生成多份,所以	节省空间.
 	1.4)使用时机: 该类中所有对象共享同一个数据或资源时(图片、音频、视频等)
 
	 	static成员变量和类的信息一起存储在方法区
	 	
 2)static修饰方法
 	<访问修饰符> static <返回值类型> 方法名(<参数>){}
 	2.1)static修饰的方法称为静态方法/类方法(静态方法没有this)
 	2.2)静态方法直接用类名调用
 	2.3)静态方法调用可以不实例化对象(也可以实例化对象调用,不推荐),直接使用   例如:Arrays.sort(数组名);
 	2.4)静态方法属于类,方法中没有也不能使用this
 		缺点:不能访问这个类的实例成员(成员变量和方法),但可以访问静态成员
   ※2.5)静态方法不能重写,可以继承,可以重载
   		如果子类和父类的静态方法一样,该静态方法不构成重写,子类的静态方法由子类特有
 	2.6)如果这个类中某个方法与当前类的对象无关就可以声明为静态的方法
 	
		 	static方法中不能对非静态成员(对象成员)进行访问
		 	在static方法内部不能调用非静态方法，反过来是可以的。
		 	而且可以在没有创建任何对象的前提下，仅仅通过类本身来调用static方法。
		 	这实际上正是static方法的主要用途。”
 3)修饰普通初始化代码块
 		{}	有n个对象,就执行n次普通初始化代码块
 4)静态初始化代码块
 					static代码块不能出现在方法内部,普通代码块可以
 	 	static{}
 		 属于类的代码块,在类建成构造方法执行前执行,只执行一次且先于普通初始化代码块执行.
 		 
	4.1)无论实例化多少次,静态代码块只执行一次 
	4.2)静态代码块运行时机是在JVM加载这个类时运行,所以运行时间最早,JVM不会重复加载一个类
	4.3)作用:可以用来加载静态资源			 
 
 
 static final常量:
 	 1)static final修饰的成员变量称为常量,必须声明同时初始化,不可改变 
 	      也可以在静态代码块中实现,但不推荐
 	 2)常常通过类名点来访问、只有一个
	 3)建议:常量名所有字母都大写，多个单词之间用_分隔
      ※4)(额外效果)编译器在编译时会将常量直接替换为具体的值，效率高
     5)何时用:数据永远不变，并且经常使用
   
	 